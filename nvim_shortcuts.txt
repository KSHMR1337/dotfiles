-- Buffer Navigation										                    -- Keybinds for navigation in lspsaga window
mapkey("<leader>bn", "bnext", "n") -- Next buffer						        move_in_saga = { prev = "<C-k>", next = "<C-j>" },
mapkey("<leader>bp", "bprevious", "n") -- Prev buffer						    -- use enter to open file with finder
mapkey("<leader>bb", "e #", "n") -- Switch to Other Buffer					    finder_action_keys = {
mapkey("<leader>`", "e #", "n") -- Switch to Other Buffer					    	open = "<CR>",
												                                },
-- Directory Navigation		    							                    -- Use enter to open file with definition preview
mapkey("<leader>m", "NvimTreeFocus", "n")							            definition_action_keys = {
mapkey("<leader>e", "NvimTreeToggle", "n")							    	        edit = "<CR>",
												                                },
-- Pane and Window Navigation									    
mapkey("<C-h>", "<C-w>h", "n") -- Navigate Left							        -- Autocompletion in nvim_cmp
mapkey("<C-j>", "<C-w>j", "n") -- Navigate Down							        ["<C-k>"] = cmp.mapping.select_prev_item(), -- previous suggestion
mapkey("<C-k>", "<C-w>k", "n") -- Navigate Up							        ["<C-j>"] = cmp.mapping.select_next_item(), -- next suggestion
mapkey("<C-l>", "<C-w>l", "n") -- Navigate Right						        ["<C-b>"] = cmp.mapping.scroll_docs(-4),
mapkey("<C-h>", "wincmd h", "t") -- Navigate Left						        ["<C-f>"] = cmp.mapping.scroll_docs(4),
mapkey("<C-j>", "wincmd j", "t") -- Navigate Down						        ["<C-Space>"] = cmp.mapping.complete(), -- show completion suggestions
mapkey("<C-k>", "wincmd k", "t") -- Navigate Up							        ["<C-e>"] = cmp.mapping.abort(), -- close completion window
mapkey("<C-l>", "wincmd l", "t") -- Navigate Right						    
mapkey("<C-h>", "TmuxNavigateLeft", "n") -- Navigate Left					    
mapkey("<C-j>", "TmuxNavigateDown", "n") -- Navigate Down					    -- Telescope keymaps
mapkey("<C-k>", "TmuxNavigateUp", "n") -- Navigate Up						    mapkey("<leader>fk", "Telescope keymaps", "n"),
mapkey("<C-l>", "TmuxNavigateRight", "n") -- Navigate Right					    mapkey("<leader>fh", "Telescope help_tags", "n"),
												                                mapkey("<leader>ff", "Telescope find_files", "n"),
-- Window Management										                    mapkey("<leader>fg", "Telescope live_grep", "n"),
mapkey("<leader>sv", "vsplit", "n") -- Split Vertically						    mapkey("<leader>fb", "Telescope buffers", "n"),
mapkey("<leader>sh", "split", "n") -- Split Horizontally					    
mapkey("<leader>sm", "MaximizerToggle", "n") -- Toggle Minimise				    -- LSP Shortcuts
												                                mapkey("<leader>fd", "Lspsaga finder", "n", opts) -- go to definition
-- Indenting											                        mapkey("<leader>gd", "Lspsaga peek_definition", "n", opts) -- peak definition
vim.keymap.set("v", "<", "<gv", { silent = true, noremap = true })				mapkey("<leader>gD", "Lspsaga goto_definition", "n", opts) -- go to definition
vim.keymap.set("v", ">", ">gv", { silent = true, noremap = true })			    mapkey("<leader>ca", "Lspsaga code_action", "n", opts) -- see available code actions
												                                mapkey("<leader>rn", "Lspsaga rename", "n", opts) -- smart rename
-- Show Full File-Path										                    mapkey("<leader>D", "Lspsaga show_line_diagnostics", "n", opts) -- show  diagnostics for line
mapkey("<leader>pa", "echo expand('%:p')", "n") -- Show Full File Path			mapkey("<leader>d", "Lspsaga show_cursor_diagnostics", "n", opts) -- show diagnostics for cursor
												                                mapkey("<leader>pd", "Lspsaga diagnostic_jump_prev", "n", opts) -- jump to prev diagnostic in buffe
-- Comments											                            mapkey("<leader>nd", "Lspsaga diagnostic_jump_next", "n", opts) -- jump to next diagnostic in buffe
vim.api.nvim_set_keymap("n", "<C-_>", "gcc", { noremap = false })				mapkey("K", "Lspsaga hover_doc", "n", opts) -- show documentation for what is under cursor
vim.api.nvim_set_keymap("v", "<C-_>", "gcc", { noremap = false })				    
												                                -- LSP Python Shortcuts
-- Tagbar											                            mapkey("<leader>oi", "PyrightOrganizeImports", "n", opts) -- organise imports
mapkey("<F8>", "TagbarToggle<CR>", "n") -- Toggle Tagbar					    mapkey("<leader>db", "DapToggleBreakpoint", "n", opts) -- toggle breakpoint
                                                                                mapkey("<leader>dr", "DapContinue", "n", opts) -- continue/invoke debugger
                                                                                mapkey("<leader>dt", "lua require('dap-python').test_method()", "n", opts) -- run tests

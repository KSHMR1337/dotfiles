if [ "$color_prompt" = yes ]; then

    zstyle ':completion:*:default' list-colors 'di=38;5;196:ex=38;5;212:fi=38;5;255:ow=38;5;124:ln=38;5;211:so=38;5;197:pi=38;5;125:bd=38;5;161:cd=38;5;210:su=38;5;204:sg=38;5;198'

    # Prompt color variable initializations
    color_commands="%F{#ffb3c1}"          
    color_lines="%F{#d50032}"          
    color_error="%F{#c62828}"                  
    color_username="%F{#ff99aa}"                  
    color_warning="%F{#ff8f00}"             
    color_separator="%F{#b71c1c}"                  
    color_brackets="%F{#c2185b}"                  
    color_prompt_sign="%F{#c51162}"    

    # Syntax-highlighting color variable initializations
    color_unknown="#FFB6C1"
    color_alias="#FF69B4"
    color_highlight="#FF69B4"
    color_underline="#FF0000"
    color_command_separator="#FF1493"
    color_comment="#DDA0DD"
    color_arg0="#FFFFFF"
    color_bracket_error="#FF0000"
    color_bracket_level_1="#ff4756"
    color_bracket_level_2="#FF1493"
    color_bracket_level_3="#FF69B4"
    color_bracket_level_4="#FFB6C1"
    color_bracket_level_5="#FF69B4"
    color_reserved="#FF1493"
    color_prompt_root="#FF0000"
    color_reset="%f"

    username=$(whoami | tr "[:lower:]" "[:upper:]")
    
    # This is backup prompt without the conditionals for brackets arount $conda_env and $branch
    # PROMPT=$'${color_lines}┌──%B${color_brackets}(${color_commands}$(conda_env)${color_brackets})%b${color_lines}─%B${color_brackets}(${color_username}%n${color_separator}@${color_username}%m${color_brackets})%b${color_lines}─%B${color_brackets}(${color_commands}$(git_branch_name)${color_brackets})%b${color_lines}─%B${color_brackets}[${color_commands}%(6~.%-1~/…/%4~.%5~)${color_brackets}]%b${color_lines}\n└──%B%(#.${color_error}#.%F{red}$)%b${color_lines} '
    PROMPT=$'${color_lines}┌──%B${color_brackets}$( [[ -n "$(conda_env)" ]] && echo "(${color_commands}$(conda_env)${color_brackets})" )%b${color_lines}─%B${color_brackets}(${color_username}%n${color_separator}@${color_username}%m${color_brackets})%b${color_lines}─%B${color_brackets}$( [[ -n "$(git_branch_name)" ]] && echo "(${color_commands}$(git_branch_name)${color_brackets})" )%b${color_lines}─%B${color_brackets}[$( [[ -n "%(6~.%-1~/…/%4~.%5~)" ]] && echo "${color_commands}%(6~.%-1~/…/%4~.%5~)" )${color_brackets}]%b${color_lines}\n└──%B%(#.${color_error}#.$color_prompt_sign$)%b${color_lines}'
    RPROMPT=$'%(?.. %? ${color_error}%B⨯%b${color_reset})%(1j. %j ${color_warning}%B⚙%b${color_reset}.)'


    # Enable syntax-highlighting
    ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
    ZSH_HIGHLIGHT_STYLES[default]=none
    ZSH_HIGHLIGHT_STYLES[unknown-token]="fg=${color_unknown},bold"
    ZSH_HIGHLIGHT_STYLES[reserved-word]="fg=${color_reserved},bold"
    ZSH_HIGHLIGHT_STYLES[suffix-alias]="fg=${color_prompt_root},underline"
    ZSH_HIGHLIGHT_STYLES[global-alias]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[precommand]="fg=${color_underline},underline"
    ZSH_HIGHLIGHT_STYLES[commandseparator]="fg=${color_prompt_root},bold"
    ZSH_HIGHLIGHT_STYLES[autodirectory]="fg=${color_prompt_root},underline"
    ZSH_HIGHLIGHT_STYLES[path]=underline
    ZSH_HIGHLIGHT_STYLES[globbing]="fg=${color_prompt_root},bold"
    ZSH_HIGHLIGHT_STYLES[history-expansion]="fg=${color_prompt_root},bold"
    ZSH_HIGHLIGHT_STYLES[command-substitution]=none
    ZSH_HIGHLIGHT_STYLES[command-substitution-delimiter]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[process-substitution]=none
    ZSH_HIGHLIGHT_STYLES[process-substitution-delimiter]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[single-hyphen-option]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[double-hyphen-option]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
    ZSH_HIGHLIGHT_STYLES[back-quoted-argument-delimiter]="fg=${color_prompt_root},bold"
    ZSH_HIGHLIGHT_STYLES[single-quoted-argument]="fg=${color_warning}"
    ZSH_HIGHLIGHT_STYLES[double-quoted-argument]="fg=${color_warning}"
    ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]="fg=${color_warning}"
    ZSH_HIGHLIGHT_STYLES[rc-quote]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]="fg=${color_highlight}"
    ZSH_HIGHLIGHT_STYLES[assign]=none
    ZSH_HIGHLIGHT_STYLES[redirection]="fg=${color_prompt_root},bold"
    ZSH_HIGHLIGHT_STYLES[comment]="fg=${color_comment},bold"
    ZSH_HIGHLIGHT_STYLES[named-fd]=none
    ZSH_HIGHLIGHT_STYLES[numeric-fd]=none
    ZSH_HIGHLIGHT_STYLES[arg0]="fg=${color_arg0}"
    ZSH_HIGHLIGHT_STYLES[bracket-error]="fg=${color_bracket_error},bold"
    ZSH_HIGHLIGHT_STYLES[bracket-level-1]="fg=${color_bracket_level_1},bold"
    ZSH_HIGHLIGHT_STYLES[bracket-level-2]="fg=${color_bracket_level_2},bold"
    ZSH_HIGHLIGHT_STYLES[bracket-level-3]="fg=${color_bracket_level_3},bold"
    ZSH_HIGHLIGHT_STYLES[bracket-level-4]="fg=${color_bracket_level_4},bold"
    ZSH_HIGHLIGHT_STYLES[bracket-level-5]="fg=${color_bracket_level_5},bold"
    ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]=standout

else
    PROMPT=$'┌──$(conda_env)─(%n@%m)─$(git_branch_name)─[(6~.%-1~/…/%4~.%5~)]\n└──%B%(#.)'
fi

unset color_prompt force_color_prompt

if [ -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
   ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#f7b0ce'
fi

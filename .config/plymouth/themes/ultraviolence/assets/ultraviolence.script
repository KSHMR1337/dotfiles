/* -------------------------------------- Window ----------------------------------- */

Window.GetMaxWidth = fun() {
  i = 0;
  width = 0;
  while (Window.GetWidth(i)) {
    width = Math.Max(width, Window.GetWidth(i));
    i++;
  }
  return width;
};

Window.GetMaxHeight = fun() {
  i = 0;
  height = 0;
  while (Window.GetHeight(i)) {
    height = Math.Max(height, Window.GetHeight(i));
    i++;
  }
  return height;
};

anim.imagecount = 20;
anim.target_width = Window.GetWidth();
anim.target_height = Window.GetHeight();

fun RotatedImage(index) {
  index = Math.Int(index);
  if (!RotatedImageCache[index])
    RotatedImageCache[index] = anim.original_image.Rotate((Math.Pi * 2 * index) / anim.imagecount);
  return RotatedImageCache[index];
}

/* -------------------------------------- Animation ----------------------------------- */

if (Plymouth.GetMode() == "suspend" || Plymouth.GetMode() == "resume") {
  background.original_image = ImageNew("suspend.png");
}
else {
  logo.original_image = ImageNew("logo.png");
  background.original_image = ImageNew("background.png");

  anim.image = ImageNew("animation.png");
  // Scale animation to fit screen proportionally
  anim_width = anim.image.GetWidth();
  anim_height = anim.image.GetHeight();
  if (anim_width > 0 && anim_height > 0) {
    scale_factor = Math.Min(anim.target_width * 0.2 / anim_width, anim.target_height * 0.2 / anim_height);
    anim.original_image = anim.image.Scale(anim_width * scale_factor, anim_height * scale_factor);
  } else {
    anim.original_image = anim.image;
  }

  RotatedImageCache = [];
  
  anim.sprite = SpriteNew();
  anim.sprite.SetImage(RotatedImage(0));
  // Center horizontally
  anim.sprite.SetX((Window.GetWidth() - RotatedImage(0).GetWidth()) / 2);
  anim.sprite.SetY(Window.GetHeight() * 0.35);
  anim.angle = 0;
  anim.index = 0;
}

/* -------------------------------------- Logo ----------------------------------- */

logo_width = logo.original_image.GetWidth();
logo_height = logo.original_image.GetHeight();
if (logo_width > 0 && logo_height > 0) {
  ratio = logo_width / logo_height;
  reduction = 0.10;
  logo.image = logo.original_image.Scale(reduction * Window.GetWidth(), reduction * Window.GetWidth() / ratio);
} else {
  logo.image = logo.original_image;
}

logo.sprite = SpriteNew();
logo.sprite.SetImage(logo.image);
logo.opacity_angle = 0;
// Center the logo
logo.sprite.SetX((Window.GetWidth() - logo.image.GetWidth()) / 2);
logo.sprite.SetY(Window.GetHeight() * 0.35);

// Scale background to fill entire screen
bg_width = background.original_image.GetWidth();
bg_height = background.original_image.GetHeight();
if (bg_width > 0 && bg_height > 0) {
  background.image = background.original_image.Scale(Window.GetWidth(), Window.GetHeight());
} else {
  background.image = background.original_image;
}

background.sprite = SpriteNew();
background.sprite.SetImage(background.image);
background.sprite.SetPosition(0, 0, -10);

fun refresh_callback() {
  if (status == "normal") {
    anim.index += 1;
    anim.index %= anim.imagecount;
    anim.sprite.SetImage(RotatedImage(anim.index));
    // Recenter after rotation since dimensions may change
    anim.sprite.SetX((Window.GetWidth() - RotatedImage(anim.index).GetWidth()) / 2);
  }
  else {
    anim.sprite.SetOpacity(0);
  }
}

if (Plymouth.GetMode() != "suspend" && Plymouth.GetMode() != "resume") {
  Plymouth.SetRefreshFunction(refresh_callback);
}

/* -------------------------------------- Progress Bar ----------------------------------- */

progress_box.image = Image("progress_box.png");
progress_box.sprite = Sprite(progress_box.image);

// Center progress box
progress_box.x = (Window.GetWidth() - progress_box.image.GetWidth()) / 2;
progress_box.y = Window.GetHeight() * 0.6 - progress_box.image.GetHeight() / 2;
progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);

progress_bar.original_image = Image("progress_bar.png");
progress_bar.sprite = Sprite();

// Center progress bar within the box
progress_bar.x = (Window.GetWidth() - progress_bar.original_image.GetWidth()) / 2;
progress_bar.y = Window.GetHeight() * 0.6 - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 2);

fun progress_callback(duration, progress) {
  if (progress_bar.original_image.GetWidth() > 0) {
    new_width = Math.Int(progress_bar.original_image.GetWidth() * progress);
    progress_bar.image = progress_bar.original_image.Scale(new_width, progress_bar.original_image.GetHeight());
    progress_bar.sprite.SetImage(progress_bar.image);
  }
}

Plymouth.SetBootProgressFunction(progress_callback);

/* ----------------------------------------- Quit ---------------------------------------- */

fun quit_callback() {
  anim.sprite.SetOpacity(0);
}

Plymouth.SetQuitFunction(quit_callback);
